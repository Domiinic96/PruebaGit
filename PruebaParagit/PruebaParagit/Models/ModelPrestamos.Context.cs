//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebaParagit.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TransaccionesConn : DbContext
    {
        public TransaccionesConn()
            : base("name=TransaccionesConn")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUX_MaestroAuxiliares> AUX_MaestroAuxiliares { get; set; }
        public virtual DbSet<AUX_MovimientosAuxiliares> AUX_MovimientosAuxiliares { get; set; }
        public virtual DbSet<CNT_MaestroCuenta> CNT_MaestroCuenta { get; set; }
        public virtual DbSet<CNT_MaestroPresupuestoContabilidad> CNT_MaestroPresupuestoContabilidad { get; set; }
        public virtual DbSet<CNT_MovimientosContabilidad> CNT_MovimientosContabilidad { get; set; }
        public virtual DbSet<CNT_Parametros> CNT_Parametros { get; set; }
        public virtual DbSet<CNT_ResumenDocumentos> CNT_ResumenDocumentos { get; set; }
        public virtual DbSet<GRL_MaestroClientes> GRL_MaestroClientes { get; set; }
        public virtual DbSet<GRL_NCFNULO> GRL_NCFNULO { get; set; }
        public virtual DbSet<GRL_NumeroDeTransaccion> GRL_NumeroDeTransaccion { get; set; }
        public virtual DbSet<GRL_Parametros> GRL_Parametros { get; set; }
        public virtual DbSet<GRL_RenglonDeProducto> GRL_RenglonDeProducto { get; set; }
        public virtual DbSet<GRL_TipoDocumento> GRL_TipoDocumento { get; set; }
        public virtual DbSet<HST_MaestroCuenta> HST_MaestroCuenta { get; set; }
        public virtual DbSet<MaestraConceptoRC> MaestraConceptoRC { get; set; }
        public virtual DbSet<MaestroRc> MaestroRc { get; set; }
        public virtual DbSet<PTC_CiasConsolidadas> PTC_CiasConsolidadas { get; set; }
        public virtual DbSet<PTC_CobrosRealizadosOffline> PTC_CobrosRealizadosOffline { get; set; }
        public virtual DbSet<PTC_CuotasDePrestamo> PTC_CuotasDePrestamo { get; set; }
        public virtual DbSet<PTC_CuotasDePrestamoRen> PTC_CuotasDePrestamoRen { get; set; }
        public virtual DbSet<PTC_FechaRecordatorioDePago> PTC_FechaRecordatorioDePago { get; set; }
        public virtual DbSet<PTC_MaestraOficialesCobrosPr> PTC_MaestraOficialesCobrosPr { get; set; }
        public virtual DbSet<PTC_MaestroAplicaciones> PTC_MaestroAplicaciones { get; set; }
        public virtual DbSet<PTC_MaestroClasificacionPgms> PTC_MaestroClasificacionPgms { get; set; }
        public virtual DbSet<PTC_MaestroClientes> PTC_MaestroClientes { get; set; }
        public virtual DbSet<PTC_MaestroPgms> PTC_MaestroPgms { get; set; }
        public virtual DbSet<PTC_MaestroPrestamos> PTC_MaestroPrestamos { get; set; }
        public virtual DbSet<PTC_MaestroUsuarios> PTC_MaestroUsuarios { get; set; }
        public virtual DbSet<PTC_MovimientosRelacionCobradores> PTC_MovimientosRelacionCobradores { get; set; }
        public virtual DbSet<PTC_PagosDePrestamo> PTC_PagosDePrestamo { get; set; }
        public virtual DbSet<PTC_ProgramasPorUsuarios> PTC_ProgramasPorUsuarios { get; set; }
        public virtual DbSet<PTC_rptCalculoMoraPrestamo> PTC_rptCalculoMoraPrestamo { get; set; }
        public virtual DbSet<PTC_rptCuotasVencidasYNoSaldadas> PTC_rptCuotasVencidasYNoSaldadas { get; set; }
        public virtual DbSet<PTC_rptListaMovimientosPrestamo> PTC_rptListaMovimientosPrestamo { get; set; }
        public virtual DbSet<PTC_rptMovimientosPrestamo> PTC_rptMovimientosPrestamo { get; set; }
        public virtual DbSet<PTC_rptTasaRendimiento> PTC_rptTasaRendimiento { get; set; }
        public virtual DbSet<PTC_SecuenciaPrestamos> PTC_SecuenciaPrestamos { get; set; }
        public virtual DbSet<PTC_TipoDocumento> PTC_TipoDocumento { get; set; }
        public virtual DbSet<PTC_tmpReporteInteresComision> PTC_tmpReporteInteresComision { get; set; }
        public virtual DbSet<ReciboCodificado> ReciboCodificado { get; set; }
        public virtual DbSet<SEG_AplicacionePorCompanias> SEG_AplicacionePorCompanias { get; set; }
        public virtual DbSet<Seg_MaestroAplicaciones> Seg_MaestroAplicaciones { get; set; }
        public virtual DbSet<SEG_MaestroCias> SEG_MaestroCias { get; set; }
        public virtual DbSet<Seg_MaestroUsuarios> Seg_MaestroUsuarios { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Copia_PTC_ProgramasPorUsuarios> Copia_PTC_ProgramasPorUsuarios { get; set; }
        public virtual DbSet<copiaMM> copiaMM { get; set; }
        public virtual DbSet<GRL_TIPODOCUMENTO_COPIA> GRL_TIPODOCUMENTO_COPIA { get; set; }
        public virtual DbSet<MaestraNCF> MaestraNCF { get; set; }
        public virtual DbSet<Prueba> Prueba { get; set; }
        public virtual DbSet<PTC_MaestroCias> PTC_MaestroCias { get; set; }
        public virtual DbSet<PTC_MaestroPgms1> PTC_MaestroPgms1 { get; set; }
        public virtual DbSet<SEG_MaestroCias1> SEG_MaestroCias1 { get; set; }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual int dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual int dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual int dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual ObjectResult<GeneraMenu_Result> GeneraMenu(string usuario, string cia, string codigoApls)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var codigoAplsParameter = codigoApls != null ?
                new ObjectParameter("CodigoApls", codigoApls) :
                new ObjectParameter("CodigoApls", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneraMenu_Result>("GeneraMenu", usuarioParameter, ciaParameter, codigoAplsParameter);
        }
    
        public virtual ObjectResult<GeneraMenuCabecera_Result> GeneraMenuCabecera(string usuario, string cia, string codigoApls)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var codigoAplsParameter = codigoApls != null ?
                new ObjectParameter("CodigoApls", codigoApls) :
                new ObjectParameter("CodigoApls", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneraMenuCabecera_Result>("GeneraMenuCabecera", usuarioParameter, ciaParameter, codigoAplsParameter);
        }
    
        public virtual ObjectResult<GRLsp_LogInValidator_Result> GRLsp_LogInValidator(string user, string clave)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GRLsp_LogInValidator_Result>("GRLsp_LogInValidator", userParameter, claveParameter);
        }
    
        public virtual ObjectResult<sp_ActualizaRecalculo_Result> sp_ActualizaRecalculo(string cia, string usuario, string contrato, string cuotasOriginales, Nullable<decimal> bALANCE, Nullable<decimal> montoPtm, Nullable<double> tasaInteres, Nullable<System.DateTime> fechaContrato, Nullable<System.DateTime> fecha1raCuota, Nullable<int> noCuotas, Nullable<int> noCuotasOtros, Nullable<byte> vencimiento, Nullable<byte> absOIns, Nullable<byte> frecuencia, Nullable<byte> tipoTabla, Nullable<decimal> inicial, Nullable<decimal> traspaso, Nullable<decimal> registro, Nullable<decimal> seguro, Nullable<decimal> exoneracion, Nullable<decimal> legal, Nullable<decimal> otros, Nullable<byte> cuotasEspeciales, Nullable<int> cantCuotasEspeciales, string str_CuotasEspeciales, string strValorCuotasEspeciales, Nullable<byte> redondea)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var cuotasOriginalesParameter = cuotasOriginales != null ?
                new ObjectParameter("CuotasOriginales", cuotasOriginales) :
                new ObjectParameter("CuotasOriginales", typeof(string));
    
            var bALANCEParameter = bALANCE.HasValue ?
                new ObjectParameter("BALANCE", bALANCE) :
                new ObjectParameter("BALANCE", typeof(decimal));
    
            var montoPtmParameter = montoPtm.HasValue ?
                new ObjectParameter("MontoPtm", montoPtm) :
                new ObjectParameter("MontoPtm", typeof(decimal));
    
            var tasaInteresParameter = tasaInteres.HasValue ?
                new ObjectParameter("TasaInteres", tasaInteres) :
                new ObjectParameter("TasaInteres", typeof(double));
    
            var fechaContratoParameter = fechaContrato.HasValue ?
                new ObjectParameter("FechaContrato", fechaContrato) :
                new ObjectParameter("FechaContrato", typeof(System.DateTime));
    
            var fecha1raCuotaParameter = fecha1raCuota.HasValue ?
                new ObjectParameter("Fecha1raCuota", fecha1raCuota) :
                new ObjectParameter("Fecha1raCuota", typeof(System.DateTime));
    
            var noCuotasParameter = noCuotas.HasValue ?
                new ObjectParameter("NoCuotas", noCuotas) :
                new ObjectParameter("NoCuotas", typeof(int));
    
            var noCuotasOtrosParameter = noCuotasOtros.HasValue ?
                new ObjectParameter("NoCuotasOtros", noCuotasOtros) :
                new ObjectParameter("NoCuotasOtros", typeof(int));
    
            var vencimientoParameter = vencimiento.HasValue ?
                new ObjectParameter("Vencimiento", vencimiento) :
                new ObjectParameter("Vencimiento", typeof(byte));
    
            var absOInsParameter = absOIns.HasValue ?
                new ObjectParameter("AbsOIns", absOIns) :
                new ObjectParameter("AbsOIns", typeof(byte));
    
            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(byte));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(byte));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(decimal));
    
            var traspasoParameter = traspaso.HasValue ?
                new ObjectParameter("Traspaso", traspaso) :
                new ObjectParameter("Traspaso", typeof(decimal));
    
            var registroParameter = registro.HasValue ?
                new ObjectParameter("Registro", registro) :
                new ObjectParameter("Registro", typeof(decimal));
    
            var seguroParameter = seguro.HasValue ?
                new ObjectParameter("Seguro", seguro) :
                new ObjectParameter("Seguro", typeof(decimal));
    
            var exoneracionParameter = exoneracion.HasValue ?
                new ObjectParameter("Exoneracion", exoneracion) :
                new ObjectParameter("Exoneracion", typeof(decimal));
    
            var legalParameter = legal.HasValue ?
                new ObjectParameter("Legal", legal) :
                new ObjectParameter("Legal", typeof(decimal));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(decimal));
    
            var cuotasEspecialesParameter = cuotasEspeciales.HasValue ?
                new ObjectParameter("CuotasEspeciales", cuotasEspeciales) :
                new ObjectParameter("CuotasEspeciales", typeof(byte));
    
            var cantCuotasEspecialesParameter = cantCuotasEspeciales.HasValue ?
                new ObjectParameter("CantCuotasEspeciales", cantCuotasEspeciales) :
                new ObjectParameter("CantCuotasEspeciales", typeof(int));
    
            var str_CuotasEspecialesParameter = str_CuotasEspeciales != null ?
                new ObjectParameter("str_CuotasEspeciales", str_CuotasEspeciales) :
                new ObjectParameter("str_CuotasEspeciales", typeof(string));
    
            var strValorCuotasEspecialesParameter = strValorCuotasEspeciales != null ?
                new ObjectParameter("strValorCuotasEspeciales", strValorCuotasEspeciales) :
                new ObjectParameter("strValorCuotasEspeciales", typeof(string));
    
            var redondeaParameter = redondea.HasValue ?
                new ObjectParameter("Redondea", redondea) :
                new ObjectParameter("Redondea", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ActualizaRecalculo_Result>("sp_ActualizaRecalculo", ciaParameter, usuarioParameter, contratoParameter, cuotasOriginalesParameter, bALANCEParameter, montoPtmParameter, tasaInteresParameter, fechaContratoParameter, fecha1raCuotaParameter, noCuotasParameter, noCuotasOtrosParameter, vencimientoParameter, absOInsParameter, frecuenciaParameter, tipoTablaParameter, inicialParameter, traspasoParameter, registroParameter, seguroParameter, exoneracionParameter, legalParameter, otrosParameter, cuotasEspecialesParameter, cantCuotasEspecialesParameter, str_CuotasEspecialesParameter, strValorCuotasEspecialesParameter, redondeaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_BalanceDocumentosALaFecha(string cONTRATO, string lCLIENTE, string lDEUDOR, Nullable<System.DateTime> fECHADESDE, Nullable<System.DateTime> fECHAREPORTE, string mONEDA, string noFactura, Nullable<System.DateTime> fECHAPROYECCION)
        {
            var cONTRATOParameter = cONTRATO != null ?
                new ObjectParameter("CONTRATO", cONTRATO) :
                new ObjectParameter("CONTRATO", typeof(string));
    
            var lCLIENTEParameter = lCLIENTE != null ?
                new ObjectParameter("LCLIENTE", lCLIENTE) :
                new ObjectParameter("LCLIENTE", typeof(string));
    
            var lDEUDORParameter = lDEUDOR != null ?
                new ObjectParameter("LDEUDOR", lDEUDOR) :
                new ObjectParameter("LDEUDOR", typeof(string));
    
            var fECHADESDEParameter = fECHADESDE.HasValue ?
                new ObjectParameter("FECHADESDE", fECHADESDE) :
                new ObjectParameter("FECHADESDE", typeof(System.DateTime));
    
            var fECHAREPORTEParameter = fECHAREPORTE.HasValue ?
                new ObjectParameter("FECHAREPORTE", fECHAREPORTE) :
                new ObjectParameter("FECHAREPORTE", typeof(System.DateTime));
    
            var mONEDAParameter = mONEDA != null ?
                new ObjectParameter("MONEDA", mONEDA) :
                new ObjectParameter("MONEDA", typeof(string));
    
            var noFacturaParameter = noFactura != null ?
                new ObjectParameter("NoFactura", noFactura) :
                new ObjectParameter("NoFactura", typeof(string));
    
            var fECHAPROYECCIONParameter = fECHAPROYECCION.HasValue ?
                new ObjectParameter("FECHAPROYECCION", fECHAPROYECCION) :
                new ObjectParameter("FECHAPROYECCION", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BalanceDocumentosALaFecha", cONTRATOParameter, lCLIENTEParameter, lDEUDORParameter, fECHADESDEParameter, fECHAREPORTEParameter, mONEDAParameter, noFacturaParameter, fECHAPROYECCIONParameter);
        }
    
        public virtual ObjectResult<sp_BalanceInteresYComision_Result> sp_BalanceInteresYComision(string cia, string contrato, string cOBRADOR, Nullable<System.DateTime> fechaConsulta)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var cOBRADORParameter = cOBRADOR != null ?
                new ObjectParameter("COBRADOR", cOBRADOR) :
                new ObjectParameter("COBRADOR", typeof(string));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BalanceInteresYComision_Result>("sp_BalanceInteresYComision", ciaParameter, contratoParameter, cOBRADORParameter, fechaConsultaParameter);
        }
    
        public virtual ObjectResult<sp_CNT_Parametros_Result> sp_CNT_Parametros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CNT_Parametros_Result>("sp_CNT_Parametros");
        }
    
        public virtual ObjectResult<sp_ConsultaCia_Result> sp_ConsultaCia(string cia)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaCia_Result>("sp_ConsultaCia", ciaParameter);
        }
    
        public virtual ObjectResult<Sp_ConsultaClienteCedORnc_Result> Sp_ConsultaClienteCedORnc(string cia, string cedulaORnc)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var cedulaORncParameter = cedulaORnc != null ?
                new ObjectParameter("CedulaORnc", cedulaORnc) :
                new ObjectParameter("CedulaORnc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ConsultaClienteCedORnc_Result>("Sp_ConsultaClienteCedORnc", ciaParameter, cedulaORncParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_DeleteTable(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteTable", tableNameParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GeneraRelacionCobrador_Result> sp_GeneraRelacionCobrador(string cia, string usuario, string cOBRADOR, Nullable<System.DateTime> fechaConsulta, Nullable<int> eliminaRelacion)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var cOBRADORParameter = cOBRADOR != null ?
                new ObjectParameter("COBRADOR", cOBRADOR) :
                new ObjectParameter("COBRADOR", typeof(string));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            var eliminaRelacionParameter = eliminaRelacion.HasValue ?
                new ObjectParameter("EliminaRelacion", eliminaRelacion) :
                new ObjectParameter("EliminaRelacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GeneraRelacionCobrador_Result>("sp_GeneraRelacionCobrador", ciaParameter, usuarioParameter, cOBRADORParameter, fechaConsultaParameter, eliminaRelacionParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> sp_InsertGeneric(string tableName, string columns)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnsParameter = columns != null ?
                new ObjectParameter("Columns", columns) :
                new ObjectParameter("Columns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsertGeneric", tableNameParameter, columnsParameter);
        }
    
        public virtual int sp_ListadoDeRecibos(string cLIENTE, string dEUDOR, string cONTRATO, string mONEDA, string nORECIBO, string nCFRECIBO, Nullable<System.DateTime> fECHADESDE, Nullable<System.DateTime> fECHAHASTA, Nullable<int> vIASF, Nullable<int> vIAIF, Nullable<int> rECIBIDODE)
        {
            var cLIENTEParameter = cLIENTE != null ?
                new ObjectParameter("CLIENTE", cLIENTE) :
                new ObjectParameter("CLIENTE", typeof(string));
    
            var dEUDORParameter = dEUDOR != null ?
                new ObjectParameter("DEUDOR", dEUDOR) :
                new ObjectParameter("DEUDOR", typeof(string));
    
            var cONTRATOParameter = cONTRATO != null ?
                new ObjectParameter("CONTRATO", cONTRATO) :
                new ObjectParameter("CONTRATO", typeof(string));
    
            var mONEDAParameter = mONEDA != null ?
                new ObjectParameter("MONEDA", mONEDA) :
                new ObjectParameter("MONEDA", typeof(string));
    
            var nORECIBOParameter = nORECIBO != null ?
                new ObjectParameter("NORECIBO", nORECIBO) :
                new ObjectParameter("NORECIBO", typeof(string));
    
            var nCFRECIBOParameter = nCFRECIBO != null ?
                new ObjectParameter("NCFRECIBO", nCFRECIBO) :
                new ObjectParameter("NCFRECIBO", typeof(string));
    
            var fECHADESDEParameter = fECHADESDE.HasValue ?
                new ObjectParameter("FECHADESDE", fECHADESDE) :
                new ObjectParameter("FECHADESDE", typeof(System.DateTime));
    
            var fECHAHASTAParameter = fECHAHASTA.HasValue ?
                new ObjectParameter("FECHAHASTA", fECHAHASTA) :
                new ObjectParameter("FECHAHASTA", typeof(System.DateTime));
    
            var vIASFParameter = vIASF.HasValue ?
                new ObjectParameter("VIASF", vIASF) :
                new ObjectParameter("VIASF", typeof(int));
    
            var vIAIFParameter = vIAIF.HasValue ?
                new ObjectParameter("VIAIF", vIAIF) :
                new ObjectParameter("VIAIF", typeof(int));
    
            var rECIBIDODEParameter = rECIBIDODE.HasValue ?
                new ObjectParameter("RECIBIDODE", rECIBIDODE) :
                new ObjectParameter("RECIBIDODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListadoDeRecibos", cLIENTEParameter, dEUDORParameter, cONTRATOParameter, mONEDAParameter, nORECIBOParameter, nCFRECIBOParameter, fECHADESDEParameter, fECHAHASTAParameter, vIASFParameter, vIAIFParameter, rECIBIDODEParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_RptAuxiliares(string cia, string fechaHasta, string cuenta, string auxiliar)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaHastaParameter = fechaHasta != null ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(string));
    
            var auxiliarParameter = auxiliar != null ?
                new ObjectParameter("Auxiliar", auxiliar) :
                new ObjectParameter("Auxiliar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptAuxiliares", ciaParameter, fechaHastaParameter, cuentaParameter, auxiliarParameter);
        }
    
        public virtual ObjectResult<sp_RptBalanceAuxiliares_Result> sp_RptBalanceAuxiliares(string cia, Nullable<System.DateTime> fechaHasta, string cuentaCont, string auxiliar)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var cuentaContParameter = cuentaCont != null ?
                new ObjectParameter("CuentaCont", cuentaCont) :
                new ObjectParameter("CuentaCont", typeof(string));
    
            var auxiliarParameter = auxiliar != null ?
                new ObjectParameter("Auxiliar", auxiliar) :
                new ObjectParameter("Auxiliar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptBalanceAuxiliares_Result>("sp_RptBalanceAuxiliares", ciaParameter, fechaHastaParameter, cuentaContParameter, auxiliarParameter);
        }
    
        public virtual int sp_RptBalanza(string cia, string mesCadena, string tableName, string usuario, string pc)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var mesCadenaParameter = mesCadena != null ?
                new ObjectParameter("MesCadena", mesCadena) :
                new ObjectParameter("MesCadena", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("Pc", pc) :
                new ObjectParameter("Pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptBalanza", ciaParameter, mesCadenaParameter, tableNameParameter, usuarioParameter, pcParameter);
        }
    
        public virtual int sp_RptContratosDelMes(string cia, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, string cobrador)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var cobradorParameter = cobrador != null ?
                new ObjectParameter("Cobrador", cobrador) :
                new ObjectParameter("Cobrador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptContratosDelMes", ciaParameter, fechaDesdeParameter, fechaHastaParameter, cobradorParameter);
        }
    
        public virtual ObjectResult<sp_RptCuentas_Result> sp_RptCuentas(string cia, Nullable<System.DateTime> fechaCuentas)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaCuentasParameter = fechaCuentas.HasValue ?
                new ObjectParameter("FechaCuentas", fechaCuentas) :
                new ObjectParameter("FechaCuentas", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptCuentas_Result>("sp_RptCuentas", ciaParameter, fechaCuentasParameter);
        }
    
        public virtual int sp_RptDiarioGeneral(string cia, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, string tipoDoc)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var tipoDocParameter = tipoDoc != null ?
                new ObjectParameter("TipoDoc", tipoDoc) :
                new ObjectParameter("TipoDoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptDiarioGeneral", ciaParameter, fechaDesdeParameter, fechaHastaParameter, tipoDocParameter);
        }
    
        public virtual int sp_RptListadoCobroRealizado(string cia, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> tipoMov, string contrato, string cobrador)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var tipoMovParameter = tipoMov.HasValue ?
                new ObjectParameter("TipoMov", tipoMov) :
                new ObjectParameter("TipoMov", typeof(int));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var cobradorParameter = cobrador != null ?
                new ObjectParameter("Cobrador", cobrador) :
                new ObjectParameter("Cobrador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptListadoCobroRealizado", ciaParameter, fechaDesdeParameter, fechaHastaParameter, tipoMovParameter, contratoParameter, cobradorParameter);
        }
    
        public virtual int sp_RptMayorGeneral(string cia, Nullable<System.DateTime> fechaMayor, Nullable<int> cuadrePrestamo)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaMayorParameter = fechaMayor.HasValue ?
                new ObjectParameter("FechaMayor", fechaMayor) :
                new ObjectParameter("FechaMayor", typeof(System.DateTime));
    
            var cuadrePrestamoParameter = cuadrePrestamo.HasValue ?
                new ObjectParameter("CuadrePrestamo", cuadrePrestamo) :
                new ObjectParameter("CuadrePrestamo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptMayorGeneral", ciaParameter, fechaMayorParameter, cuadrePrestamoParameter);
        }
    
        public virtual int sp_RptMovAux(string cia, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, string cuentaCont, string auxiliar)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var cuentaContParameter = cuentaCont != null ?
                new ObjectParameter("CuentaCont", cuentaCont) :
                new ObjectParameter("CuentaCont", typeof(string));
    
            var auxiliarParameter = auxiliar != null ?
                new ObjectParameter("Auxiliar", auxiliar) :
                new ObjectParameter("Auxiliar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptMovAux", ciaParameter, fechaDesdeParameter, fechaHastaParameter, cuentaContParameter, auxiliarParameter);
        }
    
        public virtual ObjectResult<sp_RptParametros_Result> sp_RptParametros(string cia)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptParametros_Result>("sp_RptParametros", ciaParameter);
        }
    
        public virtual ObjectResult<sp_RptPestamosConBalance_Result> sp_RptPestamosConBalance(string cia, Nullable<System.DateTime> fechaHasta, string cobrador)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var cobradorParameter = cobrador != null ?
                new ObjectParameter("Cobrador", cobrador) :
                new ObjectParameter("Cobrador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RptPestamosConBalance_Result>("sp_RptPestamosConBalance", ciaParameter, fechaHastaParameter, cobradorParameter);
        }
    
        public virtual int sp_RptUltimaCuotaContrato(string cia, Nullable<System.DateTime> fecha, string cobrador)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var cobradorParameter = cobrador != null ?
                new ObjectParameter("Cobrador", cobrador) :
                new ObjectParameter("Cobrador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RptUltimaCuotaContrato", ciaParameter, fechaParameter, cobradorParameter);
        }
    
        public virtual ObjectResult<sp_SelectRelacionCobrador_Result> sp_SelectRelacionCobrador(string cia, string cOBRADOR, Nullable<System.DateTime> fechaConsulta)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var cOBRADORParameter = cOBRADOR != null ?
                new ObjectParameter("COBRADOR", cOBRADOR) :
                new ObjectParameter("COBRADOR", typeof(string));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectRelacionCobrador_Result>("sp_SelectRelacionCobrador", ciaParameter, cOBRADORParameter, fechaConsultaParameter);
        }
    
        public virtual ObjectResult<sp_TemporalVencido_Result> sp_TemporalVencido(string cia, string contrato, Nullable<System.DateTime> fechaConsulta, Nullable<int> mostrarMora)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            var mostrarMoraParameter = mostrarMora.HasValue ?
                new ObjectParameter("MostrarMora", mostrarMora) :
                new ObjectParameter("MostrarMora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TemporalVencido_Result>("sp_TemporalVencido", ciaParameter, contratoParameter, fechaConsultaParameter, mostrarMoraParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spActualizaMaestroClientes(string cia, string usuario, string codClteApls, string nomClteApls, string apeClteApls, string direccionClteApls, string telefonosClteApls, string celularClteApls, string cedRncClteApls, string empresaL, string e_mailClteApls)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var codClteAplsParameter = codClteApls != null ?
                new ObjectParameter("CodClteApls", codClteApls) :
                new ObjectParameter("CodClteApls", typeof(string));
    
            var nomClteAplsParameter = nomClteApls != null ?
                new ObjectParameter("NomClteApls", nomClteApls) :
                new ObjectParameter("NomClteApls", typeof(string));
    
            var apeClteAplsParameter = apeClteApls != null ?
                new ObjectParameter("ApeClteApls", apeClteApls) :
                new ObjectParameter("ApeClteApls", typeof(string));
    
            var direccionClteAplsParameter = direccionClteApls != null ?
                new ObjectParameter("DireccionClteApls", direccionClteApls) :
                new ObjectParameter("DireccionClteApls", typeof(string));
    
            var telefonosClteAplsParameter = telefonosClteApls != null ?
                new ObjectParameter("TelefonosClteApls", telefonosClteApls) :
                new ObjectParameter("TelefonosClteApls", typeof(string));
    
            var celularClteAplsParameter = celularClteApls != null ?
                new ObjectParameter("CelularClteApls", celularClteApls) :
                new ObjectParameter("CelularClteApls", typeof(string));
    
            var cedRncClteAplsParameter = cedRncClteApls != null ?
                new ObjectParameter("CedRncClteApls", cedRncClteApls) :
                new ObjectParameter("CedRncClteApls", typeof(string));
    
            var empresaLParameter = empresaL != null ?
                new ObjectParameter("EmpresaL", empresaL) :
                new ObjectParameter("EmpresaL", typeof(string));
    
            var e_mailClteAplsParameter = e_mailClteApls != null ?
                new ObjectParameter("E_mailClteApls", e_mailClteApls) :
                new ObjectParameter("E_mailClteApls", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActualizaMaestroClientes", ciaParameter, usuarioParameter, codClteAplsParameter, nomClteAplsParameter, apeClteAplsParameter, direccionClteAplsParameter, telefonosClteAplsParameter, celularClteAplsParameter, cedRncClteAplsParameter, empresaLParameter, e_mailClteAplsParameter);
        }
    
        public virtual ObjectResult<string> spConcultarCedula_Rnc(string cedula_Rnc)
        {
            var cedula_RncParameter = cedula_Rnc != null ?
                new ObjectParameter("Cedula_Rnc", cedula_Rnc) :
                new ObjectParameter("Cedula_Rnc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spConcultarCedula_Rnc", cedula_RncParameter);
        }
    
        public virtual ObjectResult<spConsultaAmortizacionParaPrestamos_Result> spConsultaAmortizacionParaPrestamos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaAmortizacionParaPrestamos_Result>("spConsultaAmortizacionParaPrestamos");
        }
    
        public virtual ObjectResult<spConsultaApls_Result> spConsultaApls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaApls_Result>("spConsultaApls");
        }
    
        public virtual ObjectResult<spConsultaContrato_Result> spConsultaContrato()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaContrato_Result>("spConsultaContrato");
        }
    
        public virtual int spConsultaHistorico(string periodo)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConsultaHistorico", periodoParameter);
        }
    
        public virtual ObjectResult<string> spConsultaMaestraCia(string columns)
        {
            var columnsParameter = columns != null ?
                new ObjectParameter("Columns", columns) :
                new ObjectParameter("Columns", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spConsultaMaestraCia", columnsParameter);
        }
    
        public virtual ObjectResult<spConsultaMaestraConceptoRC_Result> spConsultaMaestraConceptoRC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestraConceptoRC_Result>("spConsultaMaestraConceptoRC");
        }
    
        public virtual ObjectResult<spConsultaMaestraOficialesCobrosPr_Result> spConsultaMaestraOficialesCobrosPr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestraOficialesCobrosPr_Result>("spConsultaMaestraOficialesCobrosPr");
        }
    
        public virtual ObjectResult<spConsultaMaestraPrestamos_Result> spConsultaMaestraPrestamos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestraPrestamos_Result>("spConsultaMaestraPrestamos");
        }
    
        public virtual ObjectResult<spConsultaMaestroAuxiliares_Result> spConsultaMaestroAuxiliares()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestroAuxiliares_Result>("spConsultaMaestroAuxiliares");
        }
    
        public virtual ObjectResult<spConsultaMaestroBancos_Result> spConsultaMaestroBancos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestroBancos_Result>("spConsultaMaestroBancos");
        }
    
        public virtual ObjectResult<spConsultaMaestroClientes_Result> spConsultaMaestroClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestroClientes_Result>("spConsultaMaestroClientes");
        }
    
        public virtual ObjectResult<spConsultaMaestroCuenta_Result> spConsultaMaestroCuenta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaMaestroCuenta_Result>("spConsultaMaestroCuenta");
        }
    
        public virtual ObjectResult<string> spConsultaReciboCodificado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spConsultaReciboCodificado");
        }
    
        public virtual ObjectResult<spConsultaTipoDocumento_Result> spConsultaTipoDocumento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultaTipoDocumento_Result>("spConsultaTipoDocumento");
        }
    
        public virtual ObjectResult<spCrearTablaAmortizacion_Result> spCrearTablaAmortizacion(Nullable<decimal> montoPtm, Nullable<double> tasaInteres, Nullable<System.DateTime> fechaContrato, Nullable<System.DateTime> fecha1raCuota, Nullable<int> noCuotas, Nullable<int> noCuotasOtros, Nullable<byte> vencimiento, Nullable<byte> absOIns, Nullable<byte> frecuencia, Nullable<byte> tipoTabla, Nullable<decimal> inicial, Nullable<decimal> traspaso, Nullable<decimal> registro, Nullable<decimal> seguro, Nullable<decimal> exoneracion, Nullable<decimal> legal, Nullable<decimal> otros, Nullable<byte> cuotasEspeciales, Nullable<int> cantCuotasEspeciales, string str_CuotasEspeciales, string strValorCuotasEspeciales, Nullable<byte> redondea)
        {
            var montoPtmParameter = montoPtm.HasValue ?
                new ObjectParameter("MontoPtm", montoPtm) :
                new ObjectParameter("MontoPtm", typeof(decimal));
    
            var tasaInteresParameter = tasaInteres.HasValue ?
                new ObjectParameter("TasaInteres", tasaInteres) :
                new ObjectParameter("TasaInteres", typeof(double));
    
            var fechaContratoParameter = fechaContrato.HasValue ?
                new ObjectParameter("FechaContrato", fechaContrato) :
                new ObjectParameter("FechaContrato", typeof(System.DateTime));
    
            var fecha1raCuotaParameter = fecha1raCuota.HasValue ?
                new ObjectParameter("Fecha1raCuota", fecha1raCuota) :
                new ObjectParameter("Fecha1raCuota", typeof(System.DateTime));
    
            var noCuotasParameter = noCuotas.HasValue ?
                new ObjectParameter("NoCuotas", noCuotas) :
                new ObjectParameter("NoCuotas", typeof(int));
    
            var noCuotasOtrosParameter = noCuotasOtros.HasValue ?
                new ObjectParameter("NoCuotasOtros", noCuotasOtros) :
                new ObjectParameter("NoCuotasOtros", typeof(int));
    
            var vencimientoParameter = vencimiento.HasValue ?
                new ObjectParameter("Vencimiento", vencimiento) :
                new ObjectParameter("Vencimiento", typeof(byte));
    
            var absOInsParameter = absOIns.HasValue ?
                new ObjectParameter("AbsOIns", absOIns) :
                new ObjectParameter("AbsOIns", typeof(byte));
    
            var frecuenciaParameter = frecuencia.HasValue ?
                new ObjectParameter("Frecuencia", frecuencia) :
                new ObjectParameter("Frecuencia", typeof(byte));
    
            var tipoTablaParameter = tipoTabla.HasValue ?
                new ObjectParameter("TipoTabla", tipoTabla) :
                new ObjectParameter("TipoTabla", typeof(byte));
    
            var inicialParameter = inicial.HasValue ?
                new ObjectParameter("Inicial", inicial) :
                new ObjectParameter("Inicial", typeof(decimal));
    
            var traspasoParameter = traspaso.HasValue ?
                new ObjectParameter("Traspaso", traspaso) :
                new ObjectParameter("Traspaso", typeof(decimal));
    
            var registroParameter = registro.HasValue ?
                new ObjectParameter("Registro", registro) :
                new ObjectParameter("Registro", typeof(decimal));
    
            var seguroParameter = seguro.HasValue ?
                new ObjectParameter("Seguro", seguro) :
                new ObjectParameter("Seguro", typeof(decimal));
    
            var exoneracionParameter = exoneracion.HasValue ?
                new ObjectParameter("Exoneracion", exoneracion) :
                new ObjectParameter("Exoneracion", typeof(decimal));
    
            var legalParameter = legal.HasValue ?
                new ObjectParameter("Legal", legal) :
                new ObjectParameter("Legal", typeof(decimal));
    
            var otrosParameter = otros.HasValue ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(decimal));
    
            var cuotasEspecialesParameter = cuotasEspeciales.HasValue ?
                new ObjectParameter("CuotasEspeciales", cuotasEspeciales) :
                new ObjectParameter("CuotasEspeciales", typeof(byte));
    
            var cantCuotasEspecialesParameter = cantCuotasEspeciales.HasValue ?
                new ObjectParameter("CantCuotasEspeciales", cantCuotasEspeciales) :
                new ObjectParameter("CantCuotasEspeciales", typeof(int));
    
            var str_CuotasEspecialesParameter = str_CuotasEspeciales != null ?
                new ObjectParameter("str_CuotasEspeciales", str_CuotasEspeciales) :
                new ObjectParameter("str_CuotasEspeciales", typeof(string));
    
            var strValorCuotasEspecialesParameter = strValorCuotasEspeciales != null ?
                new ObjectParameter("strValorCuotasEspeciales", strValorCuotasEspeciales) :
                new ObjectParameter("strValorCuotasEspeciales", typeof(string));
    
            var redondeaParameter = redondea.HasValue ?
                new ObjectParameter("Redondea", redondea) :
                new ObjectParameter("Redondea", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCrearTablaAmortizacion_Result>("spCrearTablaAmortizacion", montoPtmParameter, tasaInteresParameter, fechaContratoParameter, fecha1raCuotaParameter, noCuotasParameter, noCuotasOtrosParameter, vencimientoParameter, absOInsParameter, frecuenciaParameter, tipoTablaParameter, inicialParameter, traspasoParameter, registroParameter, seguroParameter, exoneracionParameter, legalParameter, otrosParameter, cuotasEspecialesParameter, cantCuotasEspecialesParameter, str_CuotasEspecialesParameter, strValorCuotasEspecialesParameter, redondeaParameter);
        }
    
        public virtual int spEliminaCuotasPrestamos(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaCuotasPrestamos", contratoParameter, ciaParameter);
        }
    
        public virtual int spEliminaMaestroClientes(string cedulaRnc, string cia)
        {
            var cedulaRncParameter = cedulaRnc != null ?
                new ObjectParameter("CedulaRnc", cedulaRnc) :
                new ObjectParameter("CedulaRnc", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaMaestroClientes", cedulaRncParameter, ciaParameter);
        }
    
        public virtual ObjectResult<string> spEliminaMaestroPrestamos(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spEliminaMaestroPrestamos", contratoParameter, ciaParameter);
        }
    
        public virtual int spEliminaPagosDePrestamos(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminaPagosDePrestamos", contratoParameter, ciaParameter);
        }
    
        public virtual ObjectResult<spInsertaMaestroPrestamos_Result> spInsertaMaestroPrestamos(string cia, string codigoCliente, string usuario, string contrato, Nullable<double> tasaIntPtm, Nullable<decimal> montoPtm, Nullable<short> cuotasPtm, Nullable<byte> frecuenciaCuotaPtm, Nullable<double> tasaMoraPtm, Nullable<decimal> interesPtm, string cobrador, string notaPtm)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var tasaIntPtmParameter = tasaIntPtm.HasValue ?
                new ObjectParameter("TasaIntPtm", tasaIntPtm) :
                new ObjectParameter("TasaIntPtm", typeof(double));
    
            var montoPtmParameter = montoPtm.HasValue ?
                new ObjectParameter("MontoPtm", montoPtm) :
                new ObjectParameter("MontoPtm", typeof(decimal));
    
            var cuotasPtmParameter = cuotasPtm.HasValue ?
                new ObjectParameter("CuotasPtm", cuotasPtm) :
                new ObjectParameter("CuotasPtm", typeof(short));
    
            var frecuenciaCuotaPtmParameter = frecuenciaCuotaPtm.HasValue ?
                new ObjectParameter("FrecuenciaCuotaPtm", frecuenciaCuotaPtm) :
                new ObjectParameter("FrecuenciaCuotaPtm", typeof(byte));
    
            var tasaMoraPtmParameter = tasaMoraPtm.HasValue ?
                new ObjectParameter("TasaMoraPtm", tasaMoraPtm) :
                new ObjectParameter("TasaMoraPtm", typeof(double));
    
            var interesPtmParameter = interesPtm.HasValue ?
                new ObjectParameter("InteresPtm", interesPtm) :
                new ObjectParameter("InteresPtm", typeof(decimal));
    
            var cobradorParameter = cobrador != null ?
                new ObjectParameter("Cobrador", cobrador) :
                new ObjectParameter("Cobrador", typeof(string));
    
            var notaPtmParameter = notaPtm != null ?
                new ObjectParameter("NotaPtm", notaPtm) :
                new ObjectParameter("NotaPtm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertaMaestroPrestamos_Result>("spInsertaMaestroPrestamos", ciaParameter, codigoClienteParameter, usuarioParameter, contratoParameter, tasaIntPtmParameter, montoPtmParameter, cuotasPtmParameter, frecuenciaCuotaPtmParameter, tasaMoraPtmParameter, interesPtmParameter, cobradorParameter, notaPtmParameter);
        }
    
        public virtual ObjectResult<string> spInsertaMovimientoContrato(string cia, Nullable<System.DateTime> fechaHoraReg, string usuario, string contrato, Nullable<System.DateTime> fechaDocCont, string tipoDocCont, string numDocCont, Nullable<byte> movDocCont, string codigoCobrador, Nullable<decimal> valorPagoCapital, Nullable<decimal> valorPagoInteres, Nullable<decimal> valorpagoMora, Nullable<decimal> valorPagoOtros)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaHoraRegParameter = fechaHoraReg.HasValue ?
                new ObjectParameter("FechaHoraReg", fechaHoraReg) :
                new ObjectParameter("FechaHoraReg", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var fechaDocContParameter = fechaDocCont.HasValue ?
                new ObjectParameter("FechaDocCont", fechaDocCont) :
                new ObjectParameter("FechaDocCont", typeof(System.DateTime));
    
            var tipoDocContParameter = tipoDocCont != null ?
                new ObjectParameter("TipoDocCont", tipoDocCont) :
                new ObjectParameter("TipoDocCont", typeof(string));
    
            var numDocContParameter = numDocCont != null ?
                new ObjectParameter("NumDocCont", numDocCont) :
                new ObjectParameter("NumDocCont", typeof(string));
    
            var movDocContParameter = movDocCont.HasValue ?
                new ObjectParameter("MovDocCont", movDocCont) :
                new ObjectParameter("MovDocCont", typeof(byte));
    
            var codigoCobradorParameter = codigoCobrador != null ?
                new ObjectParameter("CodigoCobrador", codigoCobrador) :
                new ObjectParameter("CodigoCobrador", typeof(string));
    
            var valorPagoCapitalParameter = valorPagoCapital.HasValue ?
                new ObjectParameter("ValorPagoCapital", valorPagoCapital) :
                new ObjectParameter("ValorPagoCapital", typeof(decimal));
    
            var valorPagoInteresParameter = valorPagoInteres.HasValue ?
                new ObjectParameter("ValorPagoInteres", valorPagoInteres) :
                new ObjectParameter("ValorPagoInteres", typeof(decimal));
    
            var valorpagoMoraParameter = valorpagoMora.HasValue ?
                new ObjectParameter("ValorpagoMora", valorpagoMora) :
                new ObjectParameter("ValorpagoMora", typeof(decimal));
    
            var valorPagoOtrosParameter = valorPagoOtros.HasValue ?
                new ObjectParameter("ValorPagoOtros", valorPagoOtros) :
                new ObjectParameter("ValorPagoOtros", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spInsertaMovimientoContrato", ciaParameter, fechaHoraRegParameter, usuarioParameter, contratoParameter, fechaDocContParameter, tipoDocContParameter, numDocContParameter, movDocContParameter, codigoCobradorParameter, valorPagoCapitalParameter, valorPagoInteresParameter, valorpagoMoraParameter, valorPagoOtrosParameter);
        }
    
        public virtual ObjectResult<string> spInsertCuotasDePrestamo(string cia, string usuario, string contrato, string cuotaNumPtm, Nullable<System.DateTime> fechaVencCuota, Nullable<decimal> valorCuotaCap, Nullable<decimal> valorCuotaInt, Nullable<decimal> valorCuotaOtros)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var cuotaNumPtmParameter = cuotaNumPtm != null ?
                new ObjectParameter("CuotaNumPtm", cuotaNumPtm) :
                new ObjectParameter("CuotaNumPtm", typeof(string));
    
            var fechaVencCuotaParameter = fechaVencCuota.HasValue ?
                new ObjectParameter("FechaVencCuota", fechaVencCuota) :
                new ObjectParameter("FechaVencCuota", typeof(System.DateTime));
    
            var valorCuotaCapParameter = valorCuotaCap.HasValue ?
                new ObjectParameter("ValorCuotaCap", valorCuotaCap) :
                new ObjectParameter("ValorCuotaCap", typeof(decimal));
    
            var valorCuotaIntParameter = valorCuotaInt.HasValue ?
                new ObjectParameter("ValorCuotaInt", valorCuotaInt) :
                new ObjectParameter("ValorCuotaInt", typeof(decimal));
    
            var valorCuotaOtrosParameter = valorCuotaOtros.HasValue ?
                new ObjectParameter("ValorCuotaOtros", valorCuotaOtros) :
                new ObjectParameter("ValorCuotaOtros", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spInsertCuotasDePrestamo", ciaParameter, usuarioParameter, contratoParameter, cuotaNumPtmParameter, fechaVencCuotaParameter, valorCuotaCapParameter, valorCuotaIntParameter, valorCuotaOtrosParameter);
        }
    
        public virtual int spInsertMaestraCia(string usuario, string nombreCia, string nombreClte, string apellidoClte, string direccionCia, string ciudadCia, string sectorCia, string paisCia, string rncCia, string telefonosCia, string faxCia, string emailCia, string webCia, string localNo, Nullable<byte> consolidacion, Nullable<byte> estatus, Nullable<byte> pagoConTarjeta, Nullable<int> diaDelPago, Nullable<System.DateTime> fechaUltimoPago, string nombreTitularTarjeta, string numeroTarjeta, string expira, Nullable<int> cVV, string direccion1, string direccion2, string ciudad, string codigoPostal, string pais, ObjectParameter ver)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreCiaParameter = nombreCia != null ?
                new ObjectParameter("NombreCia", nombreCia) :
                new ObjectParameter("NombreCia", typeof(string));
    
            var nombreClteParameter = nombreClte != null ?
                new ObjectParameter("NombreClte", nombreClte) :
                new ObjectParameter("NombreClte", typeof(string));
    
            var apellidoClteParameter = apellidoClte != null ?
                new ObjectParameter("ApellidoClte", apellidoClte) :
                new ObjectParameter("ApellidoClte", typeof(string));
    
            var direccionCiaParameter = direccionCia != null ?
                new ObjectParameter("DireccionCia", direccionCia) :
                new ObjectParameter("DireccionCia", typeof(string));
    
            var ciudadCiaParameter = ciudadCia != null ?
                new ObjectParameter("CiudadCia", ciudadCia) :
                new ObjectParameter("CiudadCia", typeof(string));
    
            var sectorCiaParameter = sectorCia != null ?
                new ObjectParameter("SectorCia", sectorCia) :
                new ObjectParameter("SectorCia", typeof(string));
    
            var paisCiaParameter = paisCia != null ?
                new ObjectParameter("PaisCia", paisCia) :
                new ObjectParameter("PaisCia", typeof(string));
    
            var rncCiaParameter = rncCia != null ?
                new ObjectParameter("RncCia", rncCia) :
                new ObjectParameter("RncCia", typeof(string));
    
            var telefonosCiaParameter = telefonosCia != null ?
                new ObjectParameter("TelefonosCia", telefonosCia) :
                new ObjectParameter("TelefonosCia", typeof(string));
    
            var faxCiaParameter = faxCia != null ?
                new ObjectParameter("FaxCia", faxCia) :
                new ObjectParameter("FaxCia", typeof(string));
    
            var emailCiaParameter = emailCia != null ?
                new ObjectParameter("EmailCia", emailCia) :
                new ObjectParameter("EmailCia", typeof(string));
    
            var webCiaParameter = webCia != null ?
                new ObjectParameter("WebCia", webCia) :
                new ObjectParameter("WebCia", typeof(string));
    
            var localNoParameter = localNo != null ?
                new ObjectParameter("LocalNo", localNo) :
                new ObjectParameter("LocalNo", typeof(string));
    
            var consolidacionParameter = consolidacion.HasValue ?
                new ObjectParameter("Consolidacion", consolidacion) :
                new ObjectParameter("Consolidacion", typeof(byte));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(byte));
    
            var pagoConTarjetaParameter = pagoConTarjeta.HasValue ?
                new ObjectParameter("PagoConTarjeta", pagoConTarjeta) :
                new ObjectParameter("PagoConTarjeta", typeof(byte));
    
            var diaDelPagoParameter = diaDelPago.HasValue ?
                new ObjectParameter("DiaDelPago", diaDelPago) :
                new ObjectParameter("DiaDelPago", typeof(int));
    
            var fechaUltimoPagoParameter = fechaUltimoPago.HasValue ?
                new ObjectParameter("FechaUltimoPago", fechaUltimoPago) :
                new ObjectParameter("FechaUltimoPago", typeof(System.DateTime));
    
            var nombreTitularTarjetaParameter = nombreTitularTarjeta != null ?
                new ObjectParameter("NombreTitularTarjeta", nombreTitularTarjeta) :
                new ObjectParameter("NombreTitularTarjeta", typeof(string));
    
            var numeroTarjetaParameter = numeroTarjeta != null ?
                new ObjectParameter("NumeroTarjeta", numeroTarjeta) :
                new ObjectParameter("NumeroTarjeta", typeof(string));
    
            var expiraParameter = expira != null ?
                new ObjectParameter("Expira", expira) :
                new ObjectParameter("Expira", typeof(string));
    
            var cVVParameter = cVV.HasValue ?
                new ObjectParameter("CVV", cVV) :
                new ObjectParameter("CVV", typeof(int));
    
            var direccion1Parameter = direccion1 != null ?
                new ObjectParameter("Direccion1", direccion1) :
                new ObjectParameter("Direccion1", typeof(string));
    
            var direccion2Parameter = direccion2 != null ?
                new ObjectParameter("Direccion2", direccion2) :
                new ObjectParameter("Direccion2", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertMaestraCia", usuarioParameter, nombreCiaParameter, nombreClteParameter, apellidoClteParameter, direccionCiaParameter, ciudadCiaParameter, sectorCiaParameter, paisCiaParameter, rncCiaParameter, telefonosCiaParameter, faxCiaParameter, emailCiaParameter, webCiaParameter, localNoParameter, consolidacionParameter, estatusParameter, pagoConTarjetaParameter, diaDelPagoParameter, fechaUltimoPagoParameter, nombreTitularTarjetaParameter, numeroTarjetaParameter, expiraParameter, cVVParameter, direccion1Parameter, direccion2Parameter, ciudadParameter, codigoPostalParameter, paisParameter, ver);
        }
    
        public virtual ObjectResult<string> spInsertMaestraClientes(string cia, string usuario, string codClteApls, string nomClteApls, string apeClteApls, string direccionClteApls, string telefonosClteApls, string celularClteApls, string cedRncClteApls, string empresaL, string e_mailClteApls)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var codClteAplsParameter = codClteApls != null ?
                new ObjectParameter("CodClteApls", codClteApls) :
                new ObjectParameter("CodClteApls", typeof(string));
    
            var nomClteAplsParameter = nomClteApls != null ?
                new ObjectParameter("NomClteApls", nomClteApls) :
                new ObjectParameter("NomClteApls", typeof(string));
    
            var apeClteAplsParameter = apeClteApls != null ?
                new ObjectParameter("ApeClteApls", apeClteApls) :
                new ObjectParameter("ApeClteApls", typeof(string));
    
            var direccionClteAplsParameter = direccionClteApls != null ?
                new ObjectParameter("DireccionClteApls", direccionClteApls) :
                new ObjectParameter("DireccionClteApls", typeof(string));
    
            var telefonosClteAplsParameter = telefonosClteApls != null ?
                new ObjectParameter("TelefonosClteApls", telefonosClteApls) :
                new ObjectParameter("TelefonosClteApls", typeof(string));
    
            var celularClteAplsParameter = celularClteApls != null ?
                new ObjectParameter("CelularClteApls", celularClteApls) :
                new ObjectParameter("CelularClteApls", typeof(string));
    
            var cedRncClteAplsParameter = cedRncClteApls != null ?
                new ObjectParameter("CedRncClteApls", cedRncClteApls) :
                new ObjectParameter("CedRncClteApls", typeof(string));
    
            var empresaLParameter = empresaL != null ?
                new ObjectParameter("EmpresaL", empresaL) :
                new ObjectParameter("EmpresaL", typeof(string));
    
            var e_mailClteAplsParameter = e_mailClteApls != null ?
                new ObjectParameter("E_mailClteApls", e_mailClteApls) :
                new ObjectParameter("E_mailClteApls", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spInsertMaestraClientes", ciaParameter, usuarioParameter, codClteAplsParameter, nomClteAplsParameter, apeClteAplsParameter, direccionClteAplsParameter, telefonosClteAplsParameter, celularClteAplsParameter, cedRncClteAplsParameter, empresaLParameter, e_mailClteAplsParameter);
        }
    
        public virtual ObjectResult<string> spInsertMovimientoContrato(string cia, string contrato, string tipoDocCont, string numDocCont, string codigoCobrador, Nullable<decimal> valorPagoCapital, Nullable<decimal> valorPagoInteres, Nullable<decimal> valorpagoMora, Nullable<decimal> valorPagoOtros)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var tipoDocContParameter = tipoDocCont != null ?
                new ObjectParameter("TipoDocCont", tipoDocCont) :
                new ObjectParameter("TipoDocCont", typeof(string));
    
            var numDocContParameter = numDocCont != null ?
                new ObjectParameter("NumDocCont", numDocCont) :
                new ObjectParameter("NumDocCont", typeof(string));
    
            var codigoCobradorParameter = codigoCobrador != null ?
                new ObjectParameter("CodigoCobrador", codigoCobrador) :
                new ObjectParameter("CodigoCobrador", typeof(string));
    
            var valorPagoCapitalParameter = valorPagoCapital.HasValue ?
                new ObjectParameter("ValorPagoCapital", valorPagoCapital) :
                new ObjectParameter("ValorPagoCapital", typeof(decimal));
    
            var valorPagoInteresParameter = valorPagoInteres.HasValue ?
                new ObjectParameter("ValorPagoInteres", valorPagoInteres) :
                new ObjectParameter("ValorPagoInteres", typeof(decimal));
    
            var valorpagoMoraParameter = valorpagoMora.HasValue ?
                new ObjectParameter("ValorpagoMora", valorpagoMora) :
                new ObjectParameter("ValorpagoMora", typeof(decimal));
    
            var valorPagoOtrosParameter = valorPagoOtros.HasValue ?
                new ObjectParameter("ValorPagoOtros", valorPagoOtros) :
                new ObjectParameter("ValorPagoOtros", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spInsertMovimientoContrato", ciaParameter, contratoParameter, tipoDocContParameter, numDocContParameter, codigoCobradorParameter, valorPagoCapitalParameter, valorPagoInteresParameter, valorpagoMoraParameter, valorPagoOtrosParameter);
        }
    
        public virtual ObjectResult<string> spInsertPagosDePrestamos(string contrato, string cia, string usuario, Nullable<System.DateTime> fechaDocCont, string tipoDocCont, string numDocCont, Nullable<byte> movDocCont, string codigoCobrador, Nullable<decimal> valorPagoCapital, Nullable<decimal> valorPagoInteres, Nullable<decimal> valorpagoMora)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechaDocContParameter = fechaDocCont.HasValue ?
                new ObjectParameter("FechaDocCont", fechaDocCont) :
                new ObjectParameter("FechaDocCont", typeof(System.DateTime));
    
            var tipoDocContParameter = tipoDocCont != null ?
                new ObjectParameter("TipoDocCont", tipoDocCont) :
                new ObjectParameter("TipoDocCont", typeof(string));
    
            var numDocContParameter = numDocCont != null ?
                new ObjectParameter("NumDocCont", numDocCont) :
                new ObjectParameter("NumDocCont", typeof(string));
    
            var movDocContParameter = movDocCont.HasValue ?
                new ObjectParameter("MovDocCont", movDocCont) :
                new ObjectParameter("MovDocCont", typeof(byte));
    
            var codigoCobradorParameter = codigoCobrador != null ?
                new ObjectParameter("CodigoCobrador", codigoCobrador) :
                new ObjectParameter("CodigoCobrador", typeof(string));
    
            var valorPagoCapitalParameter = valorPagoCapital.HasValue ?
                new ObjectParameter("ValorPagoCapital", valorPagoCapital) :
                new ObjectParameter("ValorPagoCapital", typeof(decimal));
    
            var valorPagoInteresParameter = valorPagoInteres.HasValue ?
                new ObjectParameter("ValorPagoInteres", valorPagoInteres) :
                new ObjectParameter("ValorPagoInteres", typeof(decimal));
    
            var valorpagoMoraParameter = valorpagoMora.HasValue ?
                new ObjectParameter("ValorpagoMora", valorpagoMora) :
                new ObjectParameter("ValorpagoMora", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spInsertPagosDePrestamos", contratoParameter, ciaParameter, usuarioParameter, fechaDocContParameter, tipoDocContParameter, numDocContParameter, movDocContParameter, codigoCobradorParameter, valorPagoCapitalParameter, valorPagoInteresParameter, valorpagoMoraParameter);
        }
    
        public virtual int spRegistrarCompañia(string cia, Nullable<System.DateTime> fechaHoraReg, string usuario, string nombreCia, string nombreClte, string apellidoClte, string direccionCia, string ciudadCia, string sectorCia, string paisCia, string rncCia, string telefonosCia, string faxCia, string emailCia, string webCia, string localNo, Nullable<byte> consolidacion, Nullable<byte> estatus, Nullable<byte> pagoConTarjeta, Nullable<int> diaDelPago, Nullable<System.DateTime> fechaUltimoPago, string nombreTitularTarjeta, string numeroTarjeta, string expira, Nullable<int> cVV, string direccion1, string direccion2, string ciudad, string codigoPostal, string pais, string servidor, string instancia)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaHoraRegParameter = fechaHoraReg.HasValue ?
                new ObjectParameter("FechaHoraReg", fechaHoraReg) :
                new ObjectParameter("FechaHoraReg", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreCiaParameter = nombreCia != null ?
                new ObjectParameter("NombreCia", nombreCia) :
                new ObjectParameter("NombreCia", typeof(string));
    
            var nombreClteParameter = nombreClte != null ?
                new ObjectParameter("NombreClte", nombreClte) :
                new ObjectParameter("NombreClte", typeof(string));
    
            var apellidoClteParameter = apellidoClte != null ?
                new ObjectParameter("ApellidoClte", apellidoClte) :
                new ObjectParameter("ApellidoClte", typeof(string));
    
            var direccionCiaParameter = direccionCia != null ?
                new ObjectParameter("DireccionCia", direccionCia) :
                new ObjectParameter("DireccionCia", typeof(string));
    
            var ciudadCiaParameter = ciudadCia != null ?
                new ObjectParameter("CiudadCia", ciudadCia) :
                new ObjectParameter("CiudadCia", typeof(string));
    
            var sectorCiaParameter = sectorCia != null ?
                new ObjectParameter("SectorCia", sectorCia) :
                new ObjectParameter("SectorCia", typeof(string));
    
            var paisCiaParameter = paisCia != null ?
                new ObjectParameter("PaisCia", paisCia) :
                new ObjectParameter("PaisCia", typeof(string));
    
            var rncCiaParameter = rncCia != null ?
                new ObjectParameter("RncCia", rncCia) :
                new ObjectParameter("RncCia", typeof(string));
    
            var telefonosCiaParameter = telefonosCia != null ?
                new ObjectParameter("TelefonosCia", telefonosCia) :
                new ObjectParameter("TelefonosCia", typeof(string));
    
            var faxCiaParameter = faxCia != null ?
                new ObjectParameter("FaxCia", faxCia) :
                new ObjectParameter("FaxCia", typeof(string));
    
            var emailCiaParameter = emailCia != null ?
                new ObjectParameter("EmailCia", emailCia) :
                new ObjectParameter("EmailCia", typeof(string));
    
            var webCiaParameter = webCia != null ?
                new ObjectParameter("WebCia", webCia) :
                new ObjectParameter("WebCia", typeof(string));
    
            var localNoParameter = localNo != null ?
                new ObjectParameter("LocalNo", localNo) :
                new ObjectParameter("LocalNo", typeof(string));
    
            var consolidacionParameter = consolidacion.HasValue ?
                new ObjectParameter("Consolidacion", consolidacion) :
                new ObjectParameter("Consolidacion", typeof(byte));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(byte));
    
            var pagoConTarjetaParameter = pagoConTarjeta.HasValue ?
                new ObjectParameter("PagoConTarjeta", pagoConTarjeta) :
                new ObjectParameter("PagoConTarjeta", typeof(byte));
    
            var diaDelPagoParameter = diaDelPago.HasValue ?
                new ObjectParameter("DiaDelPago", diaDelPago) :
                new ObjectParameter("DiaDelPago", typeof(int));
    
            var fechaUltimoPagoParameter = fechaUltimoPago.HasValue ?
                new ObjectParameter("FechaUltimoPago", fechaUltimoPago) :
                new ObjectParameter("FechaUltimoPago", typeof(System.DateTime));
    
            var nombreTitularTarjetaParameter = nombreTitularTarjeta != null ?
                new ObjectParameter("NombreTitularTarjeta", nombreTitularTarjeta) :
                new ObjectParameter("NombreTitularTarjeta", typeof(string));
    
            var numeroTarjetaParameter = numeroTarjeta != null ?
                new ObjectParameter("NumeroTarjeta", numeroTarjeta) :
                new ObjectParameter("NumeroTarjeta", typeof(string));
    
            var expiraParameter = expira != null ?
                new ObjectParameter("Expira", expira) :
                new ObjectParameter("Expira", typeof(string));
    
            var cVVParameter = cVV.HasValue ?
                new ObjectParameter("CVV", cVV) :
                new ObjectParameter("CVV", typeof(int));
    
            var direccion1Parameter = direccion1 != null ?
                new ObjectParameter("Direccion1", direccion1) :
                new ObjectParameter("Direccion1", typeof(string));
    
            var direccion2Parameter = direccion2 != null ?
                new ObjectParameter("Direccion2", direccion2) :
                new ObjectParameter("Direccion2", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var servidorParameter = servidor != null ?
                new ObjectParameter("Servidor", servidor) :
                new ObjectParameter("Servidor", typeof(string));
    
            var instanciaParameter = instancia != null ?
                new ObjectParameter("Instancia", instancia) :
                new ObjectParameter("Instancia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRegistrarCompañia", ciaParameter, fechaHoraRegParameter, usuarioParameter, nombreCiaParameter, nombreClteParameter, apellidoClteParameter, direccionCiaParameter, ciudadCiaParameter, sectorCiaParameter, paisCiaParameter, rncCiaParameter, telefonosCiaParameter, faxCiaParameter, emailCiaParameter, webCiaParameter, localNoParameter, consolidacionParameter, estatusParameter, pagoConTarjetaParameter, diaDelPagoParameter, fechaUltimoPagoParameter, nombreTitularTarjetaParameter, numeroTarjetaParameter, expiraParameter, cVVParameter, direccion1Parameter, direccion2Parameter, ciudadParameter, codigoPostalParameter, paisParameter, servidorParameter, instanciaParameter);
        }
    
        public virtual ObjectResult<spSelectConsultaContrato_Result> spSelectConsultaContrato(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectConsultaContrato_Result>("spSelectConsultaContrato", contratoParameter, ciaParameter);
        }
    
        public virtual ObjectResult<spSelectCuotasPrestamos_Result> spSelectCuotasPrestamos(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectCuotasPrestamos_Result>("spSelectCuotasPrestamos", contratoParameter, ciaParameter);
        }
    
        public virtual ObjectResult<spSelectInfoClientes_Result> spSelectInfoClientes(string cedRncCliente, string cia)
        {
            var cedRncClienteParameter = cedRncCliente != null ?
                new ObjectParameter("CedRncCliente", cedRncCliente) :
                new ObjectParameter("CedRncCliente", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectInfoClientes_Result>("spSelectInfoClientes", cedRncClienteParameter, ciaParameter);
        }
    
        public virtual ObjectResult<spSelectMaestroClientes_Result> spSelectMaestroClientes(string cia)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectMaestroClientes_Result>("spSelectMaestroClientes", ciaParameter);
        }
    
        public virtual ObjectResult<spSelectMaestroPrestamos_Result> spSelectMaestroPrestamos(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectMaestroPrestamos_Result>("spSelectMaestroPrestamos", contratoParameter, ciaParameter);
        }
    
        public virtual ObjectResult<spSelectMovimientoContratos_Result> spSelectMovimientoContratos(string contrato, string cia)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectMovimientoContratos_Result>("spSelectMovimientoContratos", contratoParameter, ciaParameter);
        }
    
        public virtual ObjectResult<spSelectPagosDePrestamos_Result> spSelectPagosDePrestamos(string contrato, string cia, Nullable<System.DateTime> fechaConsulta)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectPagosDePrestamos_Result>("spSelectPagosDePrestamos", contratoParameter, ciaParameter, fechaConsultaParameter);
        }
    
        public virtual ObjectResult<spUpdateCuotasDePrestamo_Result> spUpdateCuotasDePrestamo(string cia, string usuario, string contrato, string cuotaNumPtm, Nullable<System.DateTime> fechaVencCuota, Nullable<decimal> valorCuotaCap, Nullable<decimal> valorCuotaInt, Nullable<decimal> valorCuotaOtros)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var cuotaNumPtmParameter = cuotaNumPtm != null ?
                new ObjectParameter("CuotaNumPtm", cuotaNumPtm) :
                new ObjectParameter("CuotaNumPtm", typeof(string));
    
            var fechaVencCuotaParameter = fechaVencCuota.HasValue ?
                new ObjectParameter("FechaVencCuota", fechaVencCuota) :
                new ObjectParameter("FechaVencCuota", typeof(System.DateTime));
    
            var valorCuotaCapParameter = valorCuotaCap.HasValue ?
                new ObjectParameter("ValorCuotaCap", valorCuotaCap) :
                new ObjectParameter("ValorCuotaCap", typeof(decimal));
    
            var valorCuotaIntParameter = valorCuotaInt.HasValue ?
                new ObjectParameter("ValorCuotaInt", valorCuotaInt) :
                new ObjectParameter("ValorCuotaInt", typeof(decimal));
    
            var valorCuotaOtrosParameter = valorCuotaOtros.HasValue ?
                new ObjectParameter("ValorCuotaOtros", valorCuotaOtros) :
                new ObjectParameter("ValorCuotaOtros", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdateCuotasDePrestamo_Result>("spUpdateCuotasDePrestamo", ciaParameter, usuarioParameter, contratoParameter, cuotaNumPtmParameter, fechaVencCuotaParameter, valorCuotaCapParameter, valorCuotaIntParameter, valorCuotaOtrosParameter);
        }
    
        public virtual ObjectResult<string> spUpdateMaestroClientes(string cia, string usuario, string codClteApls, string nomClteApls, string apeClteApls, string direccionClteApls, string telefonosClteApls, string celularClteApls, string cedRncClteApls, string empresaL, string e_mailClteApls)
        {
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var codClteAplsParameter = codClteApls != null ?
                new ObjectParameter("CodClteApls", codClteApls) :
                new ObjectParameter("CodClteApls", typeof(string));
    
            var nomClteAplsParameter = nomClteApls != null ?
                new ObjectParameter("NomClteApls", nomClteApls) :
                new ObjectParameter("NomClteApls", typeof(string));
    
            var apeClteAplsParameter = apeClteApls != null ?
                new ObjectParameter("ApeClteApls", apeClteApls) :
                new ObjectParameter("ApeClteApls", typeof(string));
    
            var direccionClteAplsParameter = direccionClteApls != null ?
                new ObjectParameter("DireccionClteApls", direccionClteApls) :
                new ObjectParameter("DireccionClteApls", typeof(string));
    
            var telefonosClteAplsParameter = telefonosClteApls != null ?
                new ObjectParameter("TelefonosClteApls", telefonosClteApls) :
                new ObjectParameter("TelefonosClteApls", typeof(string));
    
            var celularClteAplsParameter = celularClteApls != null ?
                new ObjectParameter("CelularClteApls", celularClteApls) :
                new ObjectParameter("CelularClteApls", typeof(string));
    
            var cedRncClteAplsParameter = cedRncClteApls != null ?
                new ObjectParameter("CedRncClteApls", cedRncClteApls) :
                new ObjectParameter("CedRncClteApls", typeof(string));
    
            var empresaLParameter = empresaL != null ?
                new ObjectParameter("EmpresaL", empresaL) :
                new ObjectParameter("EmpresaL", typeof(string));
    
            var e_mailClteAplsParameter = e_mailClteApls != null ?
                new ObjectParameter("E_mailClteApls", e_mailClteApls) :
                new ObjectParameter("E_mailClteApls", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUpdateMaestroClientes", ciaParameter, usuarioParameter, codClteAplsParameter, nomClteAplsParameter, apeClteAplsParameter, direccionClteAplsParameter, telefonosClteAplsParameter, celularClteAplsParameter, cedRncClteAplsParameter, empresaLParameter, e_mailClteAplsParameter);
        }
    
        public virtual ObjectResult<spUpdateMaestroPrestamos_Result> spUpdateMaestroPrestamos(string cedula, string cia, string codigoCliente, string usuario, Nullable<int> contrato, Nullable<decimal> tasaIntPtm, Nullable<decimal> montoPtm, Nullable<int> cuotasPtm, Nullable<bool> frecuenciaCuotaPtm, Nullable<decimal> tasaMoraPtm, Nullable<decimal> interesPtm, Nullable<int> cobrador, Nullable<int> notaPtm)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var codigoClienteParameter = codigoCliente != null ?
                new ObjectParameter("CodigoCliente", codigoCliente) :
                new ObjectParameter("CodigoCliente", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contratoParameter = contrato.HasValue ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(int));
    
            var tasaIntPtmParameter = tasaIntPtm.HasValue ?
                new ObjectParameter("TasaIntPtm", tasaIntPtm) :
                new ObjectParameter("TasaIntPtm", typeof(decimal));
    
            var montoPtmParameter = montoPtm.HasValue ?
                new ObjectParameter("MontoPtm", montoPtm) :
                new ObjectParameter("MontoPtm", typeof(decimal));
    
            var cuotasPtmParameter = cuotasPtm.HasValue ?
                new ObjectParameter("CuotasPtm", cuotasPtm) :
                new ObjectParameter("CuotasPtm", typeof(int));
    
            var frecuenciaCuotaPtmParameter = frecuenciaCuotaPtm.HasValue ?
                new ObjectParameter("FrecuenciaCuotaPtm", frecuenciaCuotaPtm) :
                new ObjectParameter("FrecuenciaCuotaPtm", typeof(bool));
    
            var tasaMoraPtmParameter = tasaMoraPtm.HasValue ?
                new ObjectParameter("TasaMoraPtm", tasaMoraPtm) :
                new ObjectParameter("TasaMoraPtm", typeof(decimal));
    
            var interesPtmParameter = interesPtm.HasValue ?
                new ObjectParameter("InteresPtm", interesPtm) :
                new ObjectParameter("InteresPtm", typeof(decimal));
    
            var cobradorParameter = cobrador.HasValue ?
                new ObjectParameter("Cobrador", cobrador) :
                new ObjectParameter("Cobrador", typeof(int));
    
            var notaPtmParameter = notaPtm.HasValue ?
                new ObjectParameter("NotaPtm", notaPtm) :
                new ObjectParameter("NotaPtm", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdateMaestroPrestamos_Result>("spUpdateMaestroPrestamos", cedulaParameter, ciaParameter, codigoClienteParameter, usuarioParameter, contratoParameter, tasaIntPtmParameter, montoPtmParameter, cuotasPtmParameter, frecuenciaCuotaPtmParameter, tasaMoraPtmParameter, interesPtmParameter, cobradorParameter, notaPtmParameter);
        }
    
        public virtual ObjectResult<string> spUpdatePagosDePrestamos(string contrato, string cia, string usuario, Nullable<System.DateTime> fechaDocCont, string tipoDocCont, string numDocCont, Nullable<byte> movDocCont, string codigoCobrador, Nullable<decimal> valorPagoCapital, Nullable<decimal> valorPagoInteres, Nullable<decimal> valorpagoMora)
        {
            var contratoParameter = contrato != null ?
                new ObjectParameter("Contrato", contrato) :
                new ObjectParameter("Contrato", typeof(string));
    
            var ciaParameter = cia != null ?
                new ObjectParameter("Cia", cia) :
                new ObjectParameter("Cia", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var fechaDocContParameter = fechaDocCont.HasValue ?
                new ObjectParameter("FechaDocCont", fechaDocCont) :
                new ObjectParameter("FechaDocCont", typeof(System.DateTime));
    
            var tipoDocContParameter = tipoDocCont != null ?
                new ObjectParameter("TipoDocCont", tipoDocCont) :
                new ObjectParameter("TipoDocCont", typeof(string));
    
            var numDocContParameter = numDocCont != null ?
                new ObjectParameter("NumDocCont", numDocCont) :
                new ObjectParameter("NumDocCont", typeof(string));
    
            var movDocContParameter = movDocCont.HasValue ?
                new ObjectParameter("MovDocCont", movDocCont) :
                new ObjectParameter("MovDocCont", typeof(byte));
    
            var codigoCobradorParameter = codigoCobrador != null ?
                new ObjectParameter("CodigoCobrador", codigoCobrador) :
                new ObjectParameter("CodigoCobrador", typeof(string));
    
            var valorPagoCapitalParameter = valorPagoCapital.HasValue ?
                new ObjectParameter("ValorPagoCapital", valorPagoCapital) :
                new ObjectParameter("ValorPagoCapital", typeof(decimal));
    
            var valorPagoInteresParameter = valorPagoInteres.HasValue ?
                new ObjectParameter("ValorPagoInteres", valorPagoInteres) :
                new ObjectParameter("ValorPagoInteres", typeof(decimal));
    
            var valorpagoMoraParameter = valorpagoMora.HasValue ?
                new ObjectParameter("ValorpagoMora", valorpagoMora) :
                new ObjectParameter("ValorpagoMora", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUpdatePagosDePrestamos", contratoParameter, ciaParameter, usuarioParameter, fechaDocContParameter, tipoDocContParameter, numDocContParameter, movDocContParameter, codigoCobradorParameter, valorPagoCapitalParameter, valorPagoInteresParameter, valorpagoMoraParameter);
        }
    }
}
